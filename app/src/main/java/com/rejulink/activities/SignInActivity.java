package com.rejulink.activities;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewTreeObserver;import android.widget.Button;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.TextView;import com.alibaba.fastjson.JSON;import com.loopj.android.http.TextHttpResponseHandler;import com.rejulink.R;import com.rejulink.protocols.CMServerAccountProtocol;import com.rejulink.protocols.bean.ResponseCMSNormal;import com.rejulink.utils.CodeDefine;import com.rejulink.utils.GlobalDefine;import com.rejulink.utils.RegDefine;import com.rejulink.utils.SharedPreferenceHelper;import com.rejulink.utils.ShowMessage;import com.rejulink.widgets.ClearEditText;import com.rejulink.widgets.ZScrollView;import org.apache.http.Header;@SuppressWarnings("deprecation")public class SignInActivity extends BaseActivity implements OnClickListener {    private RelativeLayout relative_layout_sign_in_root;    private ClearEditText clear_edit_text_sign_in_account;    private ZScrollView scroll_view_sign_in;    private ClearEditText clear_edit_text_sign_in_password;    private Button button_sign_in_submit;    private TextView text_view_sign_in_register;    private TextView text_view_sign_in_forgot_password;    private LinearLayout linear_layout_sign_in_bottom_group;    private ViewTreeObserver.OnGlobalLayoutListener globalLayoutListener = new ViewTreeObserver.OnGlobalLayoutListener() {        @Override        public void onGlobalLayout() {            int heightDiff = relative_layout_sign_in_root.getRootView().getHeight() - relative_layout_sign_in_root.getHeight();            if (heightDiff > 100) {                linear_layout_sign_in_bottom_group.setVisibility(View.GONE);                scroll_view_sign_in.setScrollY(200);            } else {                linear_layout_sign_in_bottom_group.setVisibility(View.VISIBLE);                scroll_view_sign_in.setScrollY(0);            }        }    };    public static void launchActivity(Context context, Bundle bundle) {        context.startActivity(new Intent(context, SignInActivity.class), bundle);    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_sign_in);        relative_layout_sign_in_root = (RelativeLayout) findViewById(R.id.relative_layout_sign_in_root);        linear_layout_sign_in_bottom_group = (LinearLayout) findViewById(R.id.linear_layout_sign_in_bottom_group);        scroll_view_sign_in = (ZScrollView) findViewById(R.id.scroll_view_sign_in);        clear_edit_text_sign_in_account = (ClearEditText) findViewById(R.id.clear_edit_text_sign_in_account);        clear_edit_text_sign_in_password = (ClearEditText) findViewById(R.id.clear_edit_text_sign_in_password);        button_sign_in_submit = (Button) findViewById(R.id.button_sign_in_submit);        text_view_sign_in_register = (TextView) findViewById(R.id.text_view_sign_in_register);        text_view_sign_in_forgot_password = (TextView) findViewById(R.id.text_view_sign_in_forgot_password);        button_sign_in_submit.setOnClickListener(this);        text_view_sign_in_register.setOnClickListener(this);        text_view_sign_in_forgot_password.setOnClickListener(this);        //监听键盘        relative_layout_sign_in_root.getViewTreeObserver().addOnGlobalLayoutListener(globalLayoutListener);    }    @Override    protected void onResume() {        super.onResume();        String account = (String) SharedPreferenceHelper.get(this, GlobalDefine.SavedAccount, "");        if (account != null && !account.isEmpty())            clear_edit_text_sign_in_account.setText(account);        String password = (String) SharedPreferenceHelper.get(this, GlobalDefine.SavedPassword, "");        if (password != null && !password.isEmpty())            clear_edit_text_sign_in_password.setText(password);    }    @Override    public void onClick(View view) {        switch (view.getId()) {            case R.id.button_sign_in_submit:                login();                break;            case R.id.text_view_sign_in_register:                nextActivity = ActivityEnum.SIGN_UP_ACTIVITY;                next();                break;            case R.id.text_view_sign_in_forgot_password:                nextActivity = ActivityEnum.RETRIEVE_PASSWORD_ACTIVITY;                next();                break;        }    }    private void login() {        String account = clear_edit_text_sign_in_account.getText().toString();        String password = clear_edit_text_sign_in_password.getText().toString();        if (account.isEmpty()) {            ShowMessage.showMessage(this, "账号不能为空");            return;        } else if (!account.matches(RegDefine.PHONE_NUMBER_REG)) {            ShowMessage.showMessage(this, "账号格式不正确");            return;        } else if (password.isEmpty()) {            ShowMessage.showMessage(this, "密码不能为空");            return;        } else if (!password.matches(RegDefine.PASSWORD_REG)) {            ShowMessage.showMessage(this, "密码格式不正确");            return;        }        CMServerAccountProtocol.login(this, account, password, "123456", new TextHttpResponseHandler() {            @Override            public void onFailure(int i, Header[] headers, String s, Throwable throwable) {            }            @Override            public void onSuccess(int i, Header[] headers, String s) {                ResponseCMSNormal res = JSON.parseObject(s, ResponseCMSNormal.class);                if (res.getCode() == CodeDefine.SUCCESS_DONE) {                    saveAccountInfo();                    nextActivity = ActivityEnum.MAIN_ACTIVITY;                    next();                    finish();                } else {                    ShowMessage.showMessageWithCode(SignInActivity.this, res.getCode());                }            }        });    }    /**     * 保存用户账户信息 登陆成功后调用     */    private void saveAccountInfo() {        SharedPreferenceHelper.put(this, GlobalDefine.SavedAccount, clear_edit_text_sign_in_account.getText().toString());        SharedPreferenceHelper.put(this, GlobalDefine.SavedPassword, clear_edit_text_sign_in_password.getText().toString());    }}